security:
    encoders:
        NAD\FrontendUserBundle\Entity\FrontendUser: sha512
        NAD\BackendUserBundle\Entity\BackendUser: sha512
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        user_frontend:
            entity: { class: NADFrontendUserBundle:FrontendUser, property: username }
        user_backend:
            entity: { class: NADBackendUserBundle:BackendUser, property: username }

    firewalls:
        # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:    ^/(_(profiler|wdt)|css|images|js)/
            security: false

        user:
            pattern:             .*
            context:             user
            form_login:
                login_path:     /%frontend_api%/user/information.json
            form_login:
                provider:       user_frontend
                use_forward:    true
                failure_path:   true
            anonymous:          true

        admin:
            pattern:             .*
            context:             admin
            form_login:
                login_path:     /%backend_api%/user/information.json
            form_login:
                provider:       user_backend
                use_forward:    true
                failure_path:   true
            anonymous:          true


    access_control:
        # Admin login needs to have access without any roles assigned
        - { path: ^/%website_admin%/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/%website_admin%/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/%website_admin%/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Website secured
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/%website_admin%/, role: [ROLE_ADMIN] }

        # Secured part
        - { path: ^/%frontend_api%/orders.json, role: ROLE_USER }